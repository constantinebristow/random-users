@page "/"
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<h1>Random User Data</h1>

@if (getUsersError || randomUserRequestBody is null)
{
	<p>Unable to get user data.</p>
}
else
{
		@foreach (var result in randomUserRequestBody.results)
		{
			<ul>
				<li>Title: @result.name.title</li>
				<li>First name: @result.name.first</li>
				<li>Surname: @result.name.last</li>
				<li>Age: @result.dob.age</li>
				<li>Country: @result.location.country</li>
				<li>Latitude: @result.location.coordinates.latitude</li>
				<li>Longitude: @result.location.coordinates.longitude</li>
			</ul>
			<p/>
		}
	
}

@code {
	private RandomUserRequestBody? randomUserRequestBody = new RandomUserRequestBody();
	private bool getUsersError;
	private bool shouldRender;

	protected override bool ShouldRender() => shouldRender;

	protected override void OnInitialized()
	{

		var request = new HttpRequestMessage(HttpMethod.Get,
			"https://randomuser.me/api/?results=5&noinfo");

		var client = ClientFactory.CreateClient();

		var response = client.Send(request);

		if (response.IsSuccessStatusCode)
		{
			using var responseStream = response.Content.ReadAsStream();
			randomUserRequestBody =
				JsonSerializer.Deserialize<RandomUserRequestBody>(responseStream);
		}
		else
		{
			getUsersError = true;
		}
		shouldRender = true;
	}

	public class Name
	{
		public string title { get; set; }
		public string first { get; set; }
		public string last { get; set; }
	}

	public class Street
	{
		public int number { get; set; }
		public string name { get; set; }
	}

	public class Coordinates
	{
		public string latitude { get; set; }
		public string longitude { get; set; }
	}

	public class Timezone
	{
		public string offset { get; set; }
		public string description { get; set; }
	}

	public class Location
	{
		public Street street { get; set; }
		public string city { get; set; }
		public string state { get; set; }
		public string country { get; set; }
		public object postcode { get; set; }
		public Coordinates coordinates { get; set; }
		public Timezone timezone { get; set; }
	}

	public class Login
	{
		public string uuid { get; set; }
		public string username { get; set; }
		public string password { get; set; }
		public string salt { get; set; }
		public string md5 { get; set; }
		public string sha1 { get; set; }
		public string sha256 { get; set; }
	}

	public class Dob
	{
		public DateTime date { get; set; }
		public int age { get; set; }
	}

	public class Registered
	{
		public DateTime date { get; set; }
		public int age { get; set; }
	}

	public class Id
	{
		public string name { get; set; }
		public string value { get; set; }
	}

	public class Picture
	{
		public string large { get; set; }
		public string medium { get; set; }
		public string thumbnail { get; set; }
	}

	public class Result
	{
		public string gender { get; set; }
		public Name name { get; set; }
		public Location location { get; set; }
		public string email { get; set; }
		public Login login { get; set; }
		public Dob dob { get; set; }
		public Registered registered { get; set; }
		public string phone { get; set; }
		public string cell { get; set; }
		public Id id { get; set; }
		public Picture picture { get; set; }
		public string nat { get; set; }
	}

	public class RandomUserRequestBody
	{
		public IList<Result> results { get; set; }
	}
}